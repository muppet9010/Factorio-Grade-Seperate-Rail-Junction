Bugs
----
    - Handle the target station or target track being removed while the train is in the tunnel. Currently Quality control state checks flag this as an error. Train should go on to the next order stop or if there is none just pull to the end of the portals entrance signals so its obvious thats its stopped.
    - Sending a train to a temporary stop within a tunnel causes the train to path towards the task, get pushed out of the far end of the tunnel (past the temporary stop) and have the temporary stop set as its path again. Causing the train to loop around and do the tunnel again, repeating endlessly.
    - Send a train through a tunnel, while its left (fully out, but still on portal) pull up the EXIT PORTAL of tunnel, game crashs. Seen in 0.0.3. Was mined by hand. The "this can not be mined" text appeared and the portal was replaced, but it then errored that/next tick. Make test for mining portal and both tunnel segment types during train usage and check train makes it out ok.
        - Error Message: failed getting 'position' attribute of nil for Utils.ApplyOffsetToPosition()
        - Calling Function: TrainManager.CreateUndergroundTrainObject()
        - Calling code line 891 (0.0.3): trainManagerEntry.undergroundLeavingPortalEntrancePosition = Utils.ApplyOffsetToPosition(trainManagerEntry.aboveExitPortal.portalEntrancePosition, trainManagerEntry.tunnel.undergroundTunnel.undergroundOffsetFromSurface)
        - in 0.0.4 same code is present on line 979 and so looks like the trainManagerEntry lost its cached aboveExitPortal attribute in the mining/placement. Need to check these cached portal/segment parts in trainManagerEntry and make function to re-populate them if removed.
    - Track removed on far side of tunnel while train in tunnel. Train is 2-8-2 in a 8 segment tunnel. Train pulls to end of track and stops with forwards and rear locos both directly out. Game crashs. The track is dual direction at the entrance portal and so the train should be able to path backwards naturally, with its entering reverse locos.
        - Error Message: 0 speed entering train when bad leaving train state reached.
        - Calling Function: TrainManager.HandleLeavingTrainBadState()
        - Calling code line 272 (0.0.3): throw intentional error: "TrainManager.HandleLeavingTrainBadState() doesn't support 0 speed entering train\nenteringTrain id: "
        - in 0.0.4 intentional error still present so should be reproducable, but on line 280.
        - Seen in 0.0.4 with "<>------------<>" train on: carriageEntering1, forwards none, backwards none, competitor none


Functionality not currently supported
-------------------------------------
    - Handle trains running out of fuel. Give them enough to get out of the tunnel entirely so the player can deal with.
    - Block train wagons being placed on invisible rails and on portals entrance track. Will have to do this via events and can't make placement invalid without blocking trains from crossing. At present if done this will cause errors.
    - Handle a train that enters a second tunnel while leaving a first tunnel. Get by global trainID's tracked. Support N tunnels in use at once.
    - Player changes a committed entering/leaving trains order. May cause reversion or need to be bleed through to dummy train/leaving end. At points the entering train will have no orders and be in manual mode. Maybe give it schedule of "USING TUNNEL - CHNAGE ORDERS ON LEAVING TRAIN PART" and just keep on forcing this & manual mode on it?
    - Handle player driven trains approaching the tunnel (will go on auto through the tunnel). Put the player in a pushing train if needed when the train reaches other side.
    - Handle 2 trains both entering the tunnel at once, due to manual control or free wheeling (manual mode with speed) second train.
    - Handle no driver/order trains that "coast" in to the tunnel due to being damaged or whatever. A train that can't power itself in this direction should be hard stopped at the tunnel entrance, otherwise treated like a player driven train.
    - Handle a player adding/removing a carriage from a train using a tunnel.
    - Check entering artillery trains stopped going in to the tunnel when the head has stopped coming out (signal). In vanialla an artillery train not stopped at station or in manual won't fire.
    - Handle all of the situations that a carriage/train can be destroyed. Do late on as will be time consuming and need updating on other major changes. Also cover players in trains and when the carriages, portals and tunnels are destroyed (player with body, not editor mode) - PlayerContainers.On_TunnelRemoved(). Currently a destroyed tunnel piece rebuilt (ghost placed) by a robot caused the game to crash (creative mod), so something isn't quite right in the old tunnel segment/portal destroyed code.


Features to add
---------------
    - Support 2 tunnels crossing:
        - Option A: Have a 6x6 tunnel segment that is for 2 tunnels crossing each other. Will need changes to tunnel complete checking logic. Don't think this can fast replace existing entities. This seems the more logic, but how to allow upgrading in use tunnels is the blocker.
        - Option B: Should be just able to build tunnel segments against one another and this is a handled configuration (needs solid across tunnel (3 pieces wide/long). This isn't intuative and feedback to user of invalid configurations would be problematic.
    - When you misplace a tunnel part use a render to show the valid spots to the player. As can be annoying to work out which axis is wrong. Useful if starting a tunnel with no track near by to identify rail grid.
    - When a tunnel part is placed invalidly and it is mined by the player/robot it shows the item being picked up. Need to return the item and remove the entity in a silent way. We show red warning text to the player already.
    - Proper Graphics:
        - Icons
        - Ingame entities as layered graphics for underneath and on top of trains.
        - In/Out signals on the entrance end of the portal should fit in to the graphics.
        - Cursor and Blueprint entity graphics for both placed and placement as both can be seen.
    - Look at TSM and LTN compatibility requirement or block them.


Concepts / Ideas
----------------
    - Review what to allow to be built on top of the tunnel segments, either just belts or anything non trains. At present is nothing, but can be driven over.
    - When a tunnel is destroyed (by force) there will be a mod setting to drop the train and its contents on the ground at the portal ends. Carriages, fuel, cargo items, equipment grids.
    - Tunnel sections shouldn't collide with cliffs, but rail crossing sections should. Also check if cliff reshaping from adjacent cliff removal would destroy tunnels going under them.
    - Look at if tunnel segments (not rail crossing ones) can be built under water. Should be same placement entity, just a differnet graphics entity on top to show the tunnel on the lake bed. If possible have to work out transition point.
    - Look at if tiles (concrete) can be placed over tunnel segments or something done to allow them to be paved over (even if just a visual).
    - Very very fast train mods may cause issues as they can move more than 15 tiles per tick, max speed is now 7386.3km/h or 34 tiles a tick. Either block or force to slow down for tunnels on approach/usage. The mod can only handle speeds up to 7 tiles per tick as only 1 carriage can be added/removed per tick.
    - Request for big power poles to be able to be placed on tunnel entrances to keep tunnels like rail block blurprints (MOJO style). Maybe including big power poles at both ends of the tunnel portal and in the middle with red & green wires between them? Would need to expose wire connection points though. Or have power and red/green wires transmitted through tunnels with just a connection on the entrance of each portal?


Code Improvements
----------------
    - When tunnels are removed have their underground rails kept, track the removed spacings (id currently) for later reuse. Then allows them to be re-used by a future tunnel to save the entity creation and surface size creep. Need to move to tracking placed tunnels on horizontal/vertical and not just using their shared ID as offset to facilitate this. At present the underground tracks aren't trackable and so the removal code is commented out (tunnel.undergroundTunnel.railEntities). global.underground.undergroundTunnels isn't removed when a tunnel is removed at present.
    - When looking to path backwards can we leave the reverse loco in place to see if the train naturally paths forwards/backwards. Rather than having to add and remove it each tick.
    - When looking to check for if train can reverse; check track segment at rear of train and see if we can detect signal directions. If the track segment doesn't allow reverse train then no need to try it this tick. May be another light way to rule out non reversible trains situations.
    - For very long trains or tunnels the rails in the underground might not be long enough. Place additional rails at the require distance from the tunnel ends. Currently 1000 tiles each side of tunnel hardcoded. Maybe default 1000 tiles runup is too long and is contributing to lag when making tunnel on large maps (track lag)?