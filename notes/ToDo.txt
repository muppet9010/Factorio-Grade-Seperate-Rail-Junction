Now
---
    - Class Position is now MapPosition.


Bugs / Next
-----------


Features to add/change
----------------------
    - Even with the entry train detectors its still possible in rare edge cases for a train to try and traverse a tunnel on to an already present trains position. Would need to handle trains arriving on top of one another and destroying one another when placed.
        - If this is done then some of the preliminary checks at entrance detection could possibly be removed and when manual trains are introduced this will be a necessity.
        - Example edge cases:
            - 2 trains follow each other through the same portal very closely. The first train traverses the tunnel and the second is rejected at the transition point. The second train is asusmed to just sit there un-fixed by the player and it will have been set to manual so it won't auto correct. 2 follow on cases can cause issues:
                A: The first train leaves the portal and the tunnel is released. The entry signals would still show red entry, but the mod would believe the tunnel is free. This would allow a new manual/coasting/etc train (third) to enter the portal against the red signal and successfully reserve the tunnel as the second train is invisible to the mod. When this third train traverses it would try and be cloned on top of the second train.
                B: When the first train goes to leave its exit portal it finds its forwards path is lost, but has a reverse path back through the tunnel. As it is the current reserver of the tunnel it is allowed through its transition point. This first train would try and place on top of the stopped second train.
    - Add a tips & tricks section to cover tunnel and portal construction.
    - If a player has a train GUI open and the train enters a tunnel can we open a placeholder GUI that says the train has entered a tunnel. Then when the train leaves the tunnel re-open the new Train GUI for that player. If they close the placeholder GUI then don't open the new GUI.
    - Portal/Tunnel GUI Improvements:
        - Review layout and current information presentation.
        - Possible to add an ETA time and a way to nicely handle the delays in train leaving if rail is blocked and it has to slow down while in the tunnel.
        - Make it so that the tunnel extra features don't disappear on train state change, but instead have their clickability disabled.
        - Catch the E & Escape key and close the GUI if its open. "toggle-menu" and "confirm-gui". Tried this previouly and aborted its inclusion with the below note, but regretting this. Think that closing it regardless of if another base game GUI is open is actually fine.
            - Tried closing the GUI on E and Escape, but without making our GUI a primary GUI and thus it closing when an Inventory is opened its a bad user experience, so removed.
    - Allow corners and diagonals with the tunnel pieces as its just an abstract length to have traversal time calculated for now. Player Container position will need expanding to handle corners in tunnel. Also would open the door to portals not being aligned, i.e. a U shape. Identify UPS impact when having to place cloned carriages and flipping them.
    - Allow corners and diagonals with the portal pieces. Will make train placement harder, but the portal entities are being designed with this potential functionality in mind.
    - Support 2 tunnels crossing - details vary - UPDATED NOTES IN DEDICATED BRANCH FOR THIS


UPS / code plans
------------------------
    - Tunnel usage events being raised uses some UPS per tunnel activity? So look to only raise if a mod has requested the eventId, as without it nothing can be listening to the events anyway. The overhead of the idle checking of 0 events is non-existant.
    - Building standard rotated entities on "tunnel being completed" may be lower UPS if done via blueprint or by cloning examples on a reference surface, than currently using entity_create - test and see.
    - Look at the speed distance test and see if what still causes the slowness on long tunnel/rail test instances. Maybe cloning long distances of track/tunnel parts would help. Or does it flag slowless with large tunnel constructions and this will also affect large BP's being built?
    - Upgrade ManagedTrain rather than calling CreateManagedTrainObject() to recreate it. Theres an OVERHAUL note against it.
    - From adhoc tests around which force see's a train it looks like if we set the first carriage in the train to the rail force the player's train list doesn't include the train. If so we can set the rest of the carriages to the player's force when initially cloning the train and save having to update them all from tunnel to player force upon it starting to leave the tunnel. In worst case may have to set first and last carriage only to tunnel force just to avoid any oddness in new trains lead carriage flipping.
    - Check that finding the distance to a rail signal via changing a trains path rather than walking the rail path list has a lower overall game UPS. As I don't know think that the re-pathing UPS costs and some train UPS costs are fully accounted for in the API call costs. And I only checked API costs origionally. Raised as in the mass trains leaving tunnel UPS test the traina nd pathfinder UPS costs are very high even though the mod is low. Used in both underground train functions.


Concept change ideas
--------------------
    - Dummy train changes - MUST BE DONE IN OWN BRANCH TO ENABLE ROLLBACK:
        - Don't create and manage a dummy train, but add a carriage to the cloned train that has max speed of 0 (or max friction force and weight). This should mean the real train can replace the dummy train. This would mean that the leaving train uses fuel for the duration of the tunnel trip and so has to have this monitored and refilled to get it out of the tunnel, or have an option when a player opens the tunnel GUI that if a train is in it and run out of fuel, an inventory slot is available and anything put in it will be put in the loco's of the currently using train. This fuel issue is very much an edge case.
        - Would it be viable to keep the dummy train permanently and just change its force, plus top up fuel. Rather than create it each time. Need to ensure it never can move. Would take the role of the blocking train as well. Would it be an advantage?
        - Using the real train would resolve the artillery and espcially the roboport mod issue in a very effecient manner.
        - Keeping the real train running at 0 speed would remove the impact the currently stopped leaving train currently has on the path finder weightings.
    - Commit train to use tunnel upon triggering portal entry train detector.
        Pros:
            - If we did we could create the dummy train at this point, rather than at traversing time.
            - Set the approaching train to manual and force its speed. Also stop player from affecting its schedule in any way.
            - Would replace TrainManager.TrainOnPortalTrackOngoing() with calling TrainManager.TrainApproachingOngoing() and letting that manage it.
            - This probably won't have any UPS impact overall, but should make the logic simplier for edge cases.
            - Ignore manual driving for now, just worry about scheduled trains and if their path/station changes during approach.
            - Would resolve the current issue where the train's speed slows as it approaches the signal as although we reset it every tick (TrainManager.TrainApproachingOngoing()) the game applies some braking as a % of distance remaining, this didn't use to happen as entering trains were on manaul forced speed in the old mod.
        Cons:
            - Would still need to resolve the current issue where the train's speed slows as it approaches the signal as although we reset it every tick (TrainManager.TrainApproachingOngoing()) the game applies some braking as a % of distance remaining, this didn't use to happen as entering trains were on manual forced speed in the old mod.
    - Players riding trains when the tunnel is destroyed have their corpse left wherever the player happened to be in the tunnel at the time. Should the corpse be dumped at the nearest portal entry end like if a player ejects from the train while underground. If the player is on the portal tracks (above ground) and the tunnel is destroyed killing the train, currently the player is ejected at the portal entrance; maybe the player should be killed in this scenario as well.


Long term feature plans
-----------------------
	- Support manually driven trains:
        - When they try to enter a portal area they should be stopped dead if the tunnel is in use, as per automatic trains in trying to use a reserved tunnel.
        - If tunnel is unreserved they need to reserve it at entrance train detector and can be manually driven through using same logic as was being worked on for full mod version.
        - If manual driving logic ends up being problematic just make it go on auto once committed and then at the far end return it to the players control from 0 speed.
        - Currently they are blocked from entering portals entirely.
        - When a tunnel is killed any riding players should have their bodies dumped at the tunnel entrance position (it may be gone), as in vanilla Factorio you can't loose a body.
        - When manually driving a train through a tunnel show a render of the train's carriages underground. Have them appear semi transparent or tinted so obviously not real.
        - Requires the train cloning process to support detecting train carriages in the way and destroying them (in "Features to add/change" list already).
    - Mod Compatibility:
        - Look at TSM compatibility.
        - Look at LTN compatibility.
        - Mods that add custom powered locomotives. The current acceleration logic is from the wiki, but Utils.GetTrainSpeedCalculationData() locomotiveAccelerationPower doesn't account for non default max_power of loco. Test later and should be simple enough to fix by comparing to default loco max_power value. The current hardcoded value of 10 is for the default loco attribute value of 600kW.
        - My single train unit mod.
        - Detect any mods that have destroyed train carriages spill contents on the ground. Drop train contents on ground at tunnel portals when a tunnel is destroyed.
        - Suppor for mods that enable vehicle grids for train carriages:
            Transitioning trains will activate abilities as the train part is in manual mode and stopped. This includes artillery wagons automatically opening fire and player roboports sending out construction robots. At present the artillery wagons has been resolved in a simple manner by removing their ammo as will be a very rare case.
            Can give trains a movement bonus from exoskeleton legs that we currently don't account for in Utils train data generation.
            Some thoughts on this and options to resolve:
                - Observations:
                    - Can't use active state on rolling stock.
                    - Can try setting the transitioning train's artillery wagon's relative_turret_orientation to 0 every tick unless the leavingTrain is in manual_control or has stopped at a station. This doesn't help with player roboports however.
                    - Bobs mods add's equipment grid to all standard carriage prototypes, so can't distinguish robot trains from regular trains purely by carriage prototype name. mod name: bobvehicleequipment.
                - Options:
                    - Look at setting the transitioning train's speed every tick to alternate between +/- 0.00000001 (rather than 0). Will mean the leavingTrain is never "stopped" and so nothing should ever activate. Would require identifying if the train has either roboports or artillary wagons in it and then shuffling just that train. Would have a high UPS cost for when robot mods are active on the save..
                    - The idea of using the transitioning train rather than a dummy train and adding a non movable carriage may resolve this in the neatest and most UPS effecient manner.
                    - Presently remove the ammo from artillery carriage types on entry and add them back on leaving. The robots would be harder as would need to check each carriage for an equipment grid and if found then removing their robots for the tunnel traversal. Roboports would be lots of checking carriage inventories every time when a mod that adds logistic robots to trains is present (bobs mod).
    - Diagonal tunnel crossings. Would have to be a 8 long tunnel section to get the track to clear the 6 wide tunnel. If the collision box of the crossing was made 0.5~ in from each edge then rails diagonal rails should be placable up to the edge of it. The width doesn't prevent close and spaced double diagonal tracks from being built over a tunnel. Technically some existing entities on the edge would overlap with the mod placed rails, however this is unavoidable to let the player build diagonal rails up to the crossing.
    - Look at if tiles (concrete) can be placed over tunnel segments or something done to allow them to be paved over (even if just a visual). Maybe have tunnel segments have below tile graphics and I place tunnel tiles down, keeping a record of the old tile. This lets people concrete over and remove concrete. If the tunnel segment is removed I return the stored origional tile name back.
	- Handle forces being merged via event and also surfaces being cleared and deleted. Just to mass updates or state deletion in these cases as they are extreme events.
    - The state diagram needs updating as it doesn't include trains that reversing while using 2 tunnels. Should be same events raised as if the train was using the 2 tunnels in seperate time spans.
    - Make graphics a little smoother:
        - Review portal structure and make ground be something different to structure and have a soft edge.
        - Also make unique signal light for both ends so the visual appears next to the track right on the edge of the portal, rather than offset away like present.


Feature Ideas
-------------
    - Review what to allow to be built on top of the tunnel segments, either just belts & power poles or anything non trains. At present is nothing, but can be driven over.
    - Tunnel sections shouldn't collide with cliffs, but rail crossing sections should. Also check if cliff reshaping from adjacent cliff removal would destroy tunnels going under them or cause the cliffs to vanish as they can't reshape.
    - Look at if tunnel segments (not rail crossing ones) can be built under water. Should be same placement entity, just a differnet graphics entity on top to show the tunnel on the lake bed. If possible have to work out transition point.
    - Request for big power poles to be able to be placed on tunnel entrances to keep tunnels like rail block blurprints (MOJO style). Maybe including big power poles at both ends of the tunnel portal and in the middle with red & green wires between them? Would need to expose wire connection points though. Or have power and red/green wires transmitted through tunnels with just a connection on the entrance of each portal?


Known Limitations
-----------------
    - When a tunnel is being used bi-directionally (2 ways) and 2 trains simultaniously appraoch the tunnel from opposite ends at slow speeds they can both be allowed to reserve a path through the start of the portal. They will then both fail to use the tunnel as they are blocking each other, leaving the rails deadlocked.
        - Only occurs to a tunnel that is being appraoched by 2 trains, 1 from each direction. As each train is interacting with a different portal.
        - Both trains reserve a path in to the entry signal, but not the transition signal, so no mod scripts are triggered. This is why the trains have to be going slowly.
        - Both trains have to make the reservations of the entry signals within a few ticks of each other as this is how long the Factorio circuit network takes to close a rail signal based on another rail signals state.
        - At present the work around is the mod stops the trains when the script detects the issue (transition signal or entry train detector) and alerts the player to the situation for them to manually fix.
        - Making the rail networks on each side of the tunnel not have an identical track length from the waiting chain signal to the portal entrance should prevent the conditions of this occuring, or atleast reduce even more. In reality most tunnels are expected to be used in 1 directional rail networks, nullifying the risk.
        - Possible permenant mod solutions:
            - Make tunnel single direction would solve it at 0 UPS by having signals only support 1 dirctional pathing. Would need tunnel/portal GUI option to flip direction and have some way blueprints could store the tunnels direction.
            - Can reduce opportunity for occurence by adding an inner invisible entry signal and putting a temporary blocker locomotive behind it. This would reduce the track space for the train's stopping distance down to 1 rail rather than the current portal length. This way we could script detect the approaching train stopping at this inner blocking signal, do the validation logic and then remove the temporary blocker locomotive. Would require deleting and recreating a locomotive on each portal every usage, and on the rare occurence of double usage re-pathing 1 train.
            - Could monitor the entry signal state every tick and then have a true portal track usage state knowledge witihn the mod. This would allow the double usage to be detected the tick the reservations are made and one of the users delayed, brekaing the deadlock situation. Would likly be very UPS intensive as per tick load would grow in proportion to the tunnels on the map.



Functionality not currently supported (FROM OLD MOD VERSION - BUT STILL GENERALLY RELEVENT)
----------------
    - Interlinked abnormal tunnel usage cases:
        - Things that end up in the exit portals placement areas.
            - When a leaving carriage tries to be placed, if it fails check what blocked it.
            - If its part of the leavingTrain then error
            - Otherwise kill the blocker and place a devider entity to stop any existing carriages connecting to the newly placed carriage, then place the carriage again.
            - This is to cater for when things end up on the exit portal unexpected.
            - Once the leaving carriage is placed the speed control should let the tunnel just continue normally.
        - Handle player driven trains approaching the tunnel.
            - Can change the player container to be a car and put a dummy character in the passenger seat (so no one else can get in). means the players train control will be natural.
            - have the train being manually driven for the full tunnel usage.
            - Can read the players input from the train part/vehicle they happen to be in.
            - Apply the acceleration to the underground train and let it naturally push its speed to both the entering and leaving train parts.
            - Apply the players direction input to the leaving train part if they're not in it.
            - Have it go through on auto for now from when it commits to when it starts leaving.
            - Will need to add tests for manually driven trains being changed to automatic at various points in their tunnel usage.
        - Handle 2 trains both trying to use the tunnel and its portals at once.
            - This first and second trains may each be coasting train, player driven or scheduled trains (not both scheduled).
            - This should be reduced by coasting trains and carriage add/remove logic.
            - Need to check/handle if it prevents the placing of blocking or dummy locos or ends up on the tunnel placement area.
            - Look at if we can easily detect when the train has fully moved on to the portal track and we can put the usage detection entity back down behind it before it has fully entered. Just lowers the chance of a train "sneaking" on to the portal tracks behind it. Will have to get distance from back carriage to transition signal until the train starts entering and then we can use its length to tell when its fully across the threshold. If its a short train and it pulls on to the portal and stops, we can't easily tell where the end carriage away from the Transition signal is without measuring distance ?